//
//  PokeDexProtocols.swift
//  PokedexBCI
//
//  Created Irwin Bravo Oporto on 1/04/25.
//  Copyright Â© 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Nishi
//

// PokeDexProtocols.swift

import Foundation
import UIKit

//MARK: Presenter -> Router
protocol PokeDexWireframeProtocol: AnyObject {
    static func createPokeDexModule() -> UIViewController
    func navigateToPokemonDetail(from view: PokeDexViewProtocol?, with pokemon: ResultPokeDex)
}

//MARK: View -> Presenter
protocol PokeDexPresenterProtocol: AnyObject {
    var interactor: PokeDexInteractorInputProtocol? { get set }
    
    func viewDidLoad()
    func loadPokemons()
    func cancelSearch()
    func searchPokemon(with text: String)
    func didSelectPokemon(at index: Int)
    var numberOfPokemons: Int { get }
    func pokemon(at index: Int) -> ResultPokeDex?
}

//MARK: Interactor -> Presenter
protocol PokeDexInteractorOutputProtocol: AnyObject {
    // func didReceivePokemons(_ pokemons: [Pokemon])
    // func didFailToLoadPokemons(with error: Error)
}

//MARK: Presenter -> Interactor
protocol PokeDexInteractorInputProtocol: AnyObject {
    var presenter: PokeDexInteractorOutputProtocol? { get set }
    
    func fetchAllPokemons(completion: @escaping (Result<[ResultPokeDex], Error>) -> Void)
}

//MARK: Presenter -> View
protocol PokeDexViewProtocol: AnyObject {
    var presenter: PokeDexPresenterProtocol? { get set }
    
    func playBackgroundAnimation()
    func reloadCollectionView()    
    
    func showLoading()
    func hideLoading()
    func showError(message: String)
    func showPokemons(_ pokemons: [ResultPokeDex])
    func updateSearchResults(_ results: [ResultPokeDex])

}
